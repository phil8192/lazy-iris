% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/visualisation.R
\name{visualise}
\alias{visualise}
\title{Produce a visualisation of a k-nearest neighbours.}
\usage{
visualise(feature.space, class.name, query = NULL, neighbours = NULL,
  plot.hist = F, plot.cor = F, ...)
}
\arguments{
\item{feature.space}{The feature space.}

\item{class.name}{The class name. E.g., \emph{species}.}

\item{query}{The query (optional).}

\item{neighbours}{The resulting k-nearest neighbours (optional).}

\item{plot.hist}{If \code{TRUE} plot a feature distribution histogram.}

\item{plot.cor}{If \code{TRUE} plot feature correlation.}

\item{...}{Additional arguments to \code{\link{pairs}} plotting function.}
}
\description{
Given a query, it's resulting neighbours and the original feature space,
this function will plot a visualisation of the position of the query in
relation to it's neighbours in the feature space.
}
\details{
Colour code:
\itemize{
  \item{red}{iris setosa}
  \item{green}{iris versicolour}
  \item{blue}{iris virginica}
  \item{black}{query}
}

The visualisation makes use of R's \code{\link{pairs}} plotting function,
more information on which can be viewed in the function's man page:
\code{help(pairs)}.
}
\examples{
# plot all the data.
visualise(iris.data, class.name="species", main="iris data", plot.hist=TRUE,
    plot.cor=TRUE)

# do not plot the first 2 features and omit the histogram+correlation plots.
visualise(iris.data[, -(1:2)], class.name="species", main="iris data")

#### visualise k-nearest neighbours.

# form a query.
q <- list(
    sepal.length=5.84,
    sepal.width=3.05,
    petal.length=3.76,
    petal.width=1.20)

# get the 10-nearest neighbours
top.10 <- knn(q, iris.data, 10)

# visualise the neighbours and query point.
visualise(iris.data, class.name="species", query=q, neighbours=top.10,
    main="iris data neighbours", plot.hist=TRUE, plot.cor=FALSE)
}
\author{
phil
}

